# Digital Strategic Initiatives and Digital Resources

## THEORY AND REVIEW ARTICLE

**Authors:**
- Gabriele Piccoli, Stephenson Department of Entrepreneurship & Information Systems, EJ Ourso College of Business and Center for Computation and Technology, Louisiana State University, Baton Rouge, LA, U.S.A., and Department of Economics and Management, University of Pavia, Pavia, ITALY (gpiccoli@lsu.edu)
- Joaquin Rodriguez, Department of Management, Technology, and Strategy, Grenoble Ecole de Management, 38000 Grenoble, FRANCE (joaquin.rodriguez@grenoble-em.com)
- Varun Grover, Department of Information Systems, Walton College of Business, University of Arkansas, Fayetteville, AR, U.S.A. (vgrover@uark.edu)

**Abstract:**
This paper explores the structure and design of digital strategic initiatives (DSI): identifiable competitive moves that depend on digital resources to create and appropriate economic value. We use the term digital deliberately, in line with the recent push for discerning the so-called IT “x” and Digital “x” phenomena. The paper contributes to basic science by precisely defining the digital strategic initiative concept and its essential elements: digital resources. It clarifies the difference between digital resources and established constructs such as IT resources and IT-enabled resources. We posit that the defining characteristics of digital resources are their modular design, encapsulation of value, and programmatic interface. This work also shows how the design and development of digital strategic initiatives thrive in an infrastructural, combinatorial, and servitized environment. Using illustrative cases, we demonstrate applications of the concepts by introducing two value creation pathways for DSI: (1) orchestration of digital resources and (2) creation of novel digital resources. The paper concludes by presenting open research questions and offering extensions for future inquiry.

**Keywords:** Digital resources, digital strategy, digital innovation, IT resources, IT strategy

**Quote:**
> “I don’t see any other payment companies thinking about payments as an API problem, as software problem, or an infrastructure problem. We look much more like Amazon Web Services than any traditional payment company.”
> —John Collison, Co-founder and President, Stripe Inc. (Collison, 2017a)

**Introduction**
What is a Digital Strategic Initiative (DSI)? How does it differ from a generic strategic move or an IT-enabled strategic initiative? How can DSIs be designed and implemented by organizations intent on creating and appropriating economic value? These questions are central to the information systems (IS) literature because they contribute to our collective understanding of digital strategy and digital innovation. They are particularly important today because the way digital technology enables and shapes a company’s strategic initiatives has profoundly changed (Bharadwaj et al., 2013). Exposing the lack of clarity on the topic, scholars have pointed to the proliferation of Digital “x” constructs (e.g., digital infrastructure, digital innovation) that parallel well-established IT “x” constructs (e.g., IT infrastructure, IT innovation) (Baiyere et al., 2017; Rodriguez & Piccoli, 2018). They have called for rigorous investigation based on sound ontology (Faulkner & Runde, 2019), lamenting that the literature has yet to explain what has changed and why (Baiyere et al., in press).

We respond to these calls by addressing the theoretical gap in the specific context of strategic initiatives and digital strategy. We conceive of digital strategic initiatives as identifiable competitive moves that depend on the use of digital resources to create and appropriate economic value (Piccoli & Rodriguez, 2020). Our intent is to provide the ontological foundation necessary to extend the digital strategy agenda along three lines of inquiry: DSI design and implementation, organizing for DSI, and DSI strategic outcomes. Our work explicitly clarifies the difference between the digital resource construct and traditional conceptualizations of information technology (IT) resources (Melville et al., 2004; Wade & Hulland, 2004) and IT-enabled resources (Nevo & Wade, 2010). Importantly, our definition of digital resources does not supersede, but rather complements, the traditional definition of IT and IT-enabled resources. Thus, while IT capabilities, such as systems integration and project management (Melville et al., 2004), remain critical for DSI design, implementation, and management, digital resources go beyond the confines of the IT function. As the digitization of everyday experiences continues (Yoo, 2010) and software “programs the world” (Andreessen et al., 2016), they encompass an ever-increasing array of strategic, organizational, and social phenomena (Greeven et al., 2021). Our conceptualization of digital strategic initiatives and digital resources serves as a contribution to basic science, bringing definitional precision to labels gaining currency in the academic and managerial discourses, while enhancing the value of information systems as a reference discipline.

The paper is organized as follows: The next section grounds the work in the extant literature by first demonstrating the failure of IS literature to articulate the nature of digital resources and then reviewing key concepts from the strategic IS tradition that underpins our theorizing. This is followed by a formal definition of the DSI construct and the role of digital resources at its core. The paper then clarifies the defining characteristics of digital resources in relation to traditional IS constructs. The following section details the infrastructural, combinatorial, and servitized characteristics of the environment that foster the development of digital resources and DSIs. The subsequent section illustrates the concepts with four cases and introduces two value creation pathways for DSI: (1) orchestration of digital resources, and (2) creation of novel digital resources. The paper concludes with a discussion, and a set of questions and propositions guiding future research directions.

## Related Literature

The premise of our theorizing is that the crafting and consequences of digital strategic initiatives depend upon the ontological nature and design of digital resources at their core. Recent research suggests that digital initiatives are defined by their focus on the customer (Tumbas et al., 2018). Yet, customer-facing IT-enabled initiatives have been core to strategic IS research for decades (Ives & Learmonth, 1984). Similarly, digital transformation is distinguished from IT-enabled organizational transformation in terms of organizational motivations and outcomes (Vial, 2019; Wessel et al., 2021). But it is legitimate to ask: What warrants the change in terminology if there is no change in the nature of the underlying resources?

### Foundational Concepts
Resources play a central role in the business value of IT literature (Melville et al., 2004), both in the search for IT-enabled value creation (Wade & Hulland, 2004) and the role that digital technology plays in sustained competitive advantage (Piccoli & Ives, 2005). Organizational resources are “assets and capabilities that are available and useful in detecting and responding to market opportunities or threats” (Wade & Hulland, 2004, p. 109). Assets are “anything tangible or intangible the organization can use in its processes for creating, producing, and/or offering its products (goods or services) to a market” while capabilities are “repeatable patterns of actions in the use of assets to create, produce, and/or offer products to a market” (Wade & Hulland, 2004, p. 109). Traditionally, IT assets have been associated with digital hardware and software (e.g., IT infrastructure, information repositories), whereas IT capabilities stem from human and organizational competencies (e.g., IS-business partnership, software development skills). IT-enabled resources are those systems emerging from “a relationship between an IT asset and an organizational resource” (Nevo & Wade, 2010, p. 169). While this focus was appropriate in a context dominated by hardware and software assets that were largely “IT boxes” (Baiyere et al., 2017) implemented within organizational boundaries, pervasive digitalization continues to challenge traditional pathways of value creation (Tilson et al., 2010; Yoo et al., 2010).

Digital resources are emerging as a critical construct for explaining “digital phenomena.” Recent research goes so far as to suggest that digital resources should be a focal unit of analysis for digital innovation research (Henfridsson et al., 2018). However, this and other works (Faulkner & Runde, 2019; Kohli & Grover, 2008; Lusch & Nambisan, 2015) stop short of providing a first principled definition of the digital resource construct, one that builds on previous IS research while drawing essential differences with the traditional conceptualization of IT resources and IT-enabled resources (Baiyere et al., in press; Faulkner & Runde, 2019). Such clarity is necessary to investigate the structure and design of DSI and to advance the digital strategy agenda.

### Current Use of Digital Resources in the Literature
Previous literature has suggested that digital resources have unique characteristics, such as editability (Kallinikos et al., 2013), reprogrammability (Yoo et al., 2010), and product agnosticism (Henfridsson et al., 2018). Yet these are also characteristics of traditional IT resources, such as software programs or data. Definitional ambiguity stems from the fact that most contributions using the digital resource construct fail to explicitly define it (Table 1). Those that do offer a definition typically describe them as leveraging a digital technology core, making it difficult to draw a distinction with traditional definitions of IT resources. Seminal IS literature describes IT as “the technology needed to transform inputs to outputs” (Bostrom & Heinen, 1977, p. 17) and IT artifacts as “those bundles of material and cultural properties packaged in some socially recognizable form such as hardware and/or software” (Orlikowski & Iacono, 2001, p. 121). The hardware and software of interest to IS scholars have always been instantiated as the elements of digital computer systems (i.e., a digital technology core). Leveraging a digital technology core is therefore not distinctive, thus leaving “a lot to be theorized on how digital operates differently [than IT]” (Baiyere et al., in press).

We argue that the introduction of a new term (i.e., “digital”) requires a recognizable change of material import that engenders qualitatively different phenomena (Leonardi, 2010). By engaging with the structural characteristics of DSIs and digital resources, we seek to advance conceptual clarity and highlight the distinctive nature of novel digital strategy phenomena (Grover & Lyytinen, 2015).

**Table 1. Digital Resource Conceptualization in Existing Literature**

| Concept | Definition | Treatment of the digital resource construct | Differentiation from IT “x” |
|---------|------------|--------------------------------------------|----------------------------|
| Digital innovation | Digital innovation is defined as “the carrying out of new combinations of digital and physical components to produce novel products” (Yoo et al., 2010, p. 725). | Digital components (i.e., IT) afford the design and implementation of digital innovation in the context of physical products. Examples used in the paper include GPS and social media applications. | Since digital components are not formally defined, it is difficult to see the difference from IT components. |
| Digital business strategy | Digital business strategy is defined as “organizational strategy formulated and executed by leveraging digital resources to create differential value” (Bharadwaj et al., 2013, p. 472). | Digital resources are constitutive elements of digital business strategies, conceptualized as those resources that incorporate any digital technology (e.g., Amazon Web Services). | The nature of digital is not addressed, and focusing on “any digital technology” evokes similarity to IT as historically defined. |
| Digital infrastructure | “Digital infrastructure as the collection of technological and human components, networks, systems, and processes that contribute to the functioning of an information system” (Henfridsson & Bygstad, 2013, p. 908). | Digital resources (technical components) form the foundation of digital infrastructures. Examples include enterprise service bus (ESB), booking systems, and Internet portals. | Digital resources are not formally defined, and their description as technical components makes it difficult to see their distinctiveness from IT as historically defined. |
| Digital service platforms | Service platform: “a modular structure that comprises tangible and intangible components (resources) and facilitates the interaction of actors and resources (or resource bundles)” (Lusch & Nambisan, 2015, p. 166). | While digital resources (components) are conceptualized as a critical component of service platforms, their nature is not addressed. | Digital resources are not formally defined, with the implication that any resource using IT is digital and that digital resources are no different than IT resources. |
| Digital platform | Digital platforms are defined as “a set of digital resources—including services and content—that enable value-creating interactions between external producers and consumers” (Constantinides et al., 2018, p. 381). | Digital resources are a defining element of digital platforms. Examples of digital resources used in the paper include APIs and SDKs. | While the examples are technical resources, there is no discussion of their differences with IT resources. |
| Digital resources | Digital resources are defined as “entities that serve as building blocks in the creation and capture of value from information in digital innovation. A digital resource (1) belongs to a specific value space, (2) has the potential to simultaneously be part of multiple value paths and (3) is typically produced agnostic” (Henfridsson et al., 2018, p. 92). | Digital resources are critical components for digital innovation. The definition focuses on digital resources in use and clarifies the scope and role of digital resources in multiple innovations thanks to their product agnosticism. | The definition does not directly clarify the nature of digital resources and how they differ, if at all, from IT and IT-enabled resources. |

## Digital Strategic Initiatives

The strategic information systems literature defines IT-dependent strategic initiatives as “identifiable competitive moves that depend on the use of IT to be enacted and are designed to lead to sustained improvements in a firm’s competitive position” (Piccoli & Ives, 2005, p. 748). They consist of the configuration of an activity system, dependent on IT at its core, that fosters the creation and appropriation of economic value. Similarly, we propose that digital strategic initiatives (DSI) are identifiable competitive moves that depend on the use of digital resources to create and appropriate economic value (Piccoli & Rodriguez, 2020). This definition addresses both the structure (what is) and function (what it does) of DSIs. Each element of the definition is contextualized below.

### Initiative
An initiative is an action, a “new plan for dealing with a particular problem or for achieving a particular purpose” (Oxford University Press, n.d.). In the context of organizational strategy, an initiative is a competitive action or response a firm takes to improve its position in the market (Smith et al., 1991). Competitive moves encompass a large swath of efforts, ranging from simple one-time actions (e.g., Apple cutting the price of the iPhone 13) to complex long-term initiatives (e.g., Space X offering interplanetary transportation). Not all initiatives, however, can be considered strategic.

### Strategic
The ultimate objective of business strategy is to help a firm achieve sustained superior performance through the implementation of nontransitory decisions characterized by a high degree of reliability, commitment, and irreversibility (van den Steen, 2017). Thus, any successful strategic initiative must contribute to the firm’s temporary monopolistic position and it must limit countering by competitors (Schumpeter, 1934). Of these two objectives, the first is achieved through value creation, classically defined as the difference between the customer willingness to pay commanded by the firm’s product or service and the supplier opportunity cost of the resources used by the firm to create its offerings (Brandenburger & Stuart, 1996). The second results in value capture, the ability to appropriate a portion of the value created in the form of profits (Piccoli & Ives, 2005). It follows that strategic initiatives differ from tactical moves and strategic experiments. While strategic initiatives focus on value creation, tactical moves and strategic experiments do not directly impact either customer willingness to pay or supplier opportunity cost. Not all strategic initiatives are digital.

### Digital
Our focus is on strategic initiatives that could not feasibly be implemented by the firm without a core of digital resources. As used here, the term “digital” signals a substantive departure from the terms “IT-dependent” (Piccoli & Ives, 2005) or “IT-enabled” (Nevo & Wade, 2010).

## Digital Resources

To conceptualize digital resources, we start by defining their fundamental unit, the digital object. We then describe digital resources as a specific class of digital objects that (1) are modular, (2) encapsulate objects of value, namely assets and/or capabilities, and (3) are accessible by way of a programmatic interface. We devote the remainder of this section to reviewing the ontology of digital objects, introducing the theory of modularity, exploring the ontology of digital resources, and delineating attributes that differentiate them from traditional IT resources.

### Digital Objects
An object is an enduring structured collection of elements, a “structured continuant” (Faulkner & Runde, 2013). Objects persist through time during their existence and are comprised of distinct components (also objects) organized in a discernible arrangement. Objects that exhibit spatial attributes are material objects (e.g., an iPhone’s touch screen), while those that do not are nonmaterial objects. Digital objects are those “whose component parts include one or more bitstrings” (Faulkner & Runde, 2019, p. 1285). Bitstrings, separated in program files and data files, are “the sequences of 1’s and 0’s used in computing to represent information in binary form” (Faulkner & Runde, 2013, p. 804). While it is tempting to treat any form of IT as a digital object, such interpretation is incorrect. Specifically, digital electronics and hardware components, such as the Google Tensor Processing Unit (TPU) integrated circuits or Apple’s iPad magic keyboard, are not digital objects, but they are indeed IT. Nonmaterial objects (e.g., a poem, music) need a physical bearer (e.g., a notebook, sheet music). Bitstrings always need hardware as the material bearer of the lowest level, but hardware does not need software to exist. An important characteristic of the bitstring is that, despite being a nonmaterial digital object, it can serve as the bearer of other nonmaterial objects, including other bitstrings (Faulkner & Runde, 2013). This property underlies the digitization of content, procedures, algorithms, and know-how (Overby, 2008; Tilson et al., 2010). Finally, digital computer systems, hardware and software bundles like an iPhone running iOS or a laptop running Microsoft Windows, are hybrid digital objects comprised of both material and nonmaterial elements (Faulkner & Runde, 2013).

While providing sound ontology to ground the digital resource concept, the preceding definition of digital objects does not allow for differentiation between IT resources and digital resources. Any hardware/software system rooted in the von Neumann digital computer architecture and the stored program concept (von Neumann, 1945) is a hybrid digital object. Note, however, that as with the same-state polymorphism characterizing diamond and graphite, the same constitutive elements arranged in different structures can give rise to starkly different objects that exhibit different properties. We theorize digital resources as a specific class of digital objects that embody assets and capabilities and make them accessible programmatically. To clarify their ontology, we draw on the theory of modularity.

### Modularity
Modularity represents “the degree to which a system’s components can be separated and recombined” (Schilling, 2000, p. 312). In the theory of modularity, a design architecture specifies the functional elements of a system and how they interact to deliver the system’s functionality (Ulrich, 1995). Modularity is on a continuum; architecture and module designs that reduce the need for tight integration and promote the loose coupling of components increase a system’s overall modularity (Schilling, 2000): “A module is a unit whose structural elements are powerfully connected among themselves and relatively weakly connected to elements in other units” (Baldwin & Clark, 2000, p. 63). Thus, modules are units in a larger system that are structurally independent of one another due to their design, which enforces information hiding (Parnas, 1972) through abstraction (Baldwin & Clark, 2000) and encapsulation (Schilling, 2000). By design, a module’s internal design architecture, whether highly integrated or modular itself (Tiwana, 2018), is not visible to other modules, thus minimizing interdependencies between modules.

Encapsulation enables information hiding by ensuring that modular components interact with the other elements in the system’s design architecture strictly through their interface, thus not needing visibility into the module’s inner workings (Schilling, 2000). The interface is the “preestablished way to resolve potential conflicts between interacting parts of the design” (Baldwin & Clark, 2000, p. 73). Therefore, “modular components are components whose interface characteristics are within the range of variations allowed by a modular product architecture” (Sanchez & Mahoney, 1996, p. 66). Modular component design ensures that the reuse and recombination of a module are handled systematically through its interface. They do not entail ad hoc integrations or substantial coordination between the module creators and the organization crafting a new design that uses the component. The technical aspects of artifact design (e.g., design rules and task structure) are accompanied by an explicit or implicit contract structure that provides the framework for organizational activities within the design hierarchy (Baldwin & Clark, 2000).

One classic example of modular design, the IBM System 360, illustrates these concepts. The IBM SPREAD task group in charge of System 360’s design architecture revolutionized the computer industry by pioneering the efficient separation of effort and knowledge requirements for computer system design and production. Because of its modular architecture, IBM’s System 360 gave momentum to modular component designers, the original equipment manufacturer (OEM) industry as we know it today. The design architecture of System 360 exposed design rules to manage the interdependencies between modules. Therefore, independent OEMs could compete to produce modular components compliant with the interface requirements (e.g., 12-pin chips for plugging into the backplane). In turn, information hiding enabled IBM to evaluate the potential for inclusion of each modular component based on its performance characteristics rather than its internal design.

### Definition of Digital Resources
Drawing on the ontology of digital objects and the theory of modularity, we conceptualize digital resources as a specific class of digital objects that (1) are modular; (2) encapsulate objects of value, assets, and/or capabilities; (3) and are accessible by way of a programmatic interface.

**Modular:** Digital resources are digital objects designed to work as units in larger systems. They are modular components, regardless of whether their internal structure is itself modular or monolithic. For example, Instacart orchestrates a set of digital resources (e.g., Stripe Payments, Twilio messaging and communication) into a value-creating DSI—grocery delivery within a two-hour delivery window. Instacart incorporates Stripe’s payment capabilities as a module without any visibility into its internal structure. Like any modular component, digital resources can be recursively composed of other digital resources (Ulrich, 1995). Stripe leverages digital resources, such as AWS EC2 compute and S3 storage, to produce the digital payment resource that customers like Instacart or Ford use in their own DSIs.

**Encapsulate objects of value:** Faulkner and Runde (2019) show that the ability to bear objects of value “is arguably the single most important feature of the bitstring [leading to the conclusion that] the demand for bitstrings is a derived one” (p. 1293). Similarly, a digital resource has no intrinsic value separate from the demand for the asset or capability it encapsulates. In the context of DSIs, valuable resources are those that are instrumental to the firm’s ability to create value. Organizations using the Stripe Payments module in their DSI can access the valuable capability to process payments encapsulated in Stripe Payments and do not have to develop their own internal payment competence to transact with customers.

**Accessed via programmatic interface:** Digital resources are accessed via a programmatic interface rather than a manual or physical interface. Access is fully managed by a software boundary that exposes the encapsulated asset or capability via a set of prespecified data elements and request-response actions (e.g., JSON files, API calls). Note that the digital resource is a digital object, a “cohesive whole,” of which the interface is a constitutive element. It follows that a digital resource’s programmatic interface not only encompasses a set of technical specifications (e.g., RESTful APIs access controls via tokens, rate caps, throttling of service requests) to make use of the encapsulated object of value (e.g., data objects in a database), it also covers the contract structure and coordination mechanisms (Baldwin and Clark 2000) that govern programmatic access to the resource (e.g., per-use or bulk billing, enforcement of service level agreement or regulatory frameworks). Thus, a digital object configures as a digital resource when it inscribes in its programmatic interface both the technical and governance specifications for resource access and use.

Following the above reasoning, we can categorize digital assets and digital capabilities based on the characteristics of the encapsulated object of value. Digital assets are digital resources that encapsulate either nonmaterial digital objects, such as a catalog of digital songs, or hybrid digital objects, such as a virtualized computing resource. Digital capabilities are repeatable patterns of organizational actions yielding a capacity to undertake activities that a firm can access programmatically through a programmatic digital interface. By definition, digital assets and digital capabilities are modular components. They may configure internally as either nonmaterial or hybrid digital objects. Their use, reuse, and recombination in novel DSI designs occur via a nonmaterial interface encoded in software—the programmatic bitstring interface. Recent research refers to this concept as “resource liquefaction ..., the decoupling of information from its related physical form or device” (Lusch & Nambisan, 2015, p. 160). Our work explains why “resource liquefaction” is possible and describes the structure of “liquefied” resources. That is, when a digital resource is recombined into the design architecture of a DSI, other components in the design must interface with it as a nonmaterial digital object. Abiding by the technical and governance specification of the programmatic interface, the DSI designer can leverage the digital resource exclusively via its digital abstraction—irrespective of whether the resource is internally a nonmaterial or hybrid digital object. It is this unique characteristic that warrants labeling these resources as digital.

### Digital Resources, IT Resources, and IT-Enabled Resources
The information systems literature categorizes IT resources into IT assets, such as hardware, IT infrastructure, or software applications (Melville et al., 2004); and IT capabilities, such as IT skills or IT management abilities (Wade & Hulland, 2004). It further recognizes IT-enabled resources as hybrid digital objects with emergent capabilities stemming from the synergistic combination of IT assets and organizational resources (Nevo & Wade, 2010).

The creation of a digital resource is an act of design, and many digital resources are designed ex novo. However, any IT resource or IT-enabled resource can be rearchitected to configure as a digital resource. This redesign process illustrates the relationship between IT “x” and Digital “x” constructs (Figure 1) and we use it in the remainder of this section.

**Figure 1. IT Resources, IT-Enabled Resources, and Digital Resources**
*(Note: Figure not included in text format, refer to original document for visualization)*

#### IT Assets and Digital Assets
The literature views IT assets as hardware or software, data, and programs within the organization’s control. Hardware assets are not digital objects; to constitute a digital asset, they must first evolve into hybrid digital objects. TPUs are at the heart of the Google Cloud TPU service that allows clients to train machine learning models on dedicated hardware optimized for ML tasks. Clients provisioning TPUs can do so because the hardware has been virtualized into hybrid digital objects using dedicated software (e.g., hypervisors). Such virtualized IT assets configure as digital assets when they are modularized and exposed through a programmatic interface that embeds technical and governance specifications for their use. Compute and storage resources configured as digital assets are now common in the offerings from major infrastructure-as-a-service providers (e.g., AWS EC2). They are the prototypical examples of hardware IT assets rearchitected into digital assets.

Traditional IT assets also include data and software applications (Melville et al., 2004). As nonmaterial digital objects, both data and software programs can be directly rearchitected as digital assets when modularized and exposed through a programmatic interface. The recent emergence of data exchanges shows how data repositories, a type of IT asset (Piccoli & Ives, 2005), are being reconfigured as digital assets. Firms like Snowflake promise to deliver “instant elasticity, secure data sharing and per-second pricing, across multiple clouds” (Snowflake, 2019). Traditional data sharing requires a data provider to transfer IT assets (e.g., datasets) via an ETL process into the consumers’ own IT infrastructure. Such ad hoc manual integration of the data providers’ assets into the consumers’ own data stores is a prerequisite to data processing and analysis. Data exchanges increase data liquidity (Wixom et al., 2021) by architecting data assets as modular objects of value encapsulated by a programmatic interface (Moyano et al., 2020). Using Snowflake technology, for example, a data provider can expose specific digital data assets to the applications of authorized data consumers who need not download and integrate the data into their own data warehouse or operational data stores. Rather, they access a single up-to-date copy of the data via a programmatic interface that manages the technical elements of the transaction and enforces governance rules like data deidentification, access restrictions, and use rights (Wixom et al., 2021).

Software programs are IT assets when they are not modular and/or are not encapsulated in a programmatic interface. Many established software vendors are reconfiguring their software as digital assets. An example is the recent evolution of Microsoft Excel. With the release of the Graph API, Microsoft enables access to properly abstracted Excel software functionalities (e.g., net present value formula) via a programmatic digital interface. Note that the programmatic interface of the Microsoft Graph API not only specifies how to make atomic function calls, but it also encapsulates authentication, read and write permissions, license enforcement, and other governance specifications.

#### IT Capabilities and Digital Capabilities
The information systems literature traditionally defines IT capabilities as a specific type of organizational capability, such as IT skills or IT management abilities (Wade & Hulland, 2004). This definition was recently criticized as the source of an important research gap that ignores and marginalizes digital objects (Faulkner & Runde, 2019). The conceptualization of digital capabilities as modular repeatable patterns of actions exposed for external use via a programmatic interface helps fill the gap and broaden the scope of information systems research beyond mere IT capabilities by allowing a wide range of organizational capabilities and organizational routines to configure as digital capabilities (Greeven et al., 2021).

Digital capabilities can be fully abstracted as bitstrings, or stem from IT-enabled resources. Consider Stripe’s digital payment capability. Without access to Stripe, a firm would need to develop its own payment collection for services rendered organizational capability. Historically, firms do so by using a combination of software (e.g., Quickbooks) and other organizational resources (e.g., account receivable clerks) to create and send invoices and track the payment of such invoices. Conversely, Stripe clients integrate the Stripe Payment capability as a software module into their own strategic initiatives, thereby leveraging such capability programmatically. Digital capabilities are the digital counterpart of organizational capabilities and IT-enabled capabilities. As such, even when instantiated as bitstrings, they differ from software programs that have been configured as digital assets. Digital capabilities embody repeatable patterns of organizational actions in the use of assets that provide the firm with the latent capacity to undertake activities (Table 2). They inscribe one or more organizational business processes as part of their object of value. When actioned, such business processes produce value for the organization.

Unlike a software program or a digital asset encapsulating software functionality (e.g., Microsoft Graph API), a digital capability is a coherent, fully formed modular organizational capability exposed by way of a programmatic interface. In some cases, an organizational capability cannot be fully abstracted into bitstrings (i.e., fully inscribed in software). In this case, the digital capability stems from the modularization and encapsulation of an IT-enabled resource whose emergent capabilities are exposed for integration into a DSI through a programmatic interface. A good example is Stuart, the Paris-based creator of an on-demand delivery capability for restaurants. The capability emerges from the interplay of an organizational resource (i.e., delivery riders) and IT assets such as smartphones, dispatch algorithms, and messaging software. Stuart exposes the delivery capability through an API. Regardless of the internal configuration of the delivery capability, restaurants orchestrating a food delivery DSI can leverage it (e.g., dispatch riders) programmatically via the programmatic interface.

Digital capabilities do not conceptually supplant IT capabilities, they are structurally different. The former are digital objects encapsulating repeatable patterns of actions, whereas the latter are managerial and technical organizational competences. Thus, as defined here, digital capabilities call for the development of new IT capabilities. Table 3 summarizes construct definitions.

**Table 2. Possible Configuration of Software Programs**

|  | Modular | Interface | Business process | Examples |
|-------|---------|-----------|------------------|----------|
| IT Asset | No | Human-computer interface | None | - Microsoft Excel<br>- Adobe InDesign<br>- Opera-Oracle’s PMS for hotels |
| Digital asset | Yes | Bitstring programmatic | None | - Microsoft Graph API<br>- Google Maps (Places API)<br>- BBVA Accounts API |
| Digital capability | Yes | Bitstring programmatic | Embedded | - Amazon Connect<br>- Stripe Payment<br>- BBVA Auto Loan |

**Table 3. Construct Definitions**

| Construct | Definition | Example |
|-----------|------------|---------|
| Digital object | Enduring, structured collection of elements, whose component parts include one or more bitstrings. | Digital movies, blog posts, smart devices, autonomous cars, digital assets, and digital capabilities. |
| Digital resource | A specific class of digital objects that are accessible by way of a programmatic interface. | Any digital asset or capability, such as Google Maps or running mortgage applications automatic credit scoring. |
| Digital asset | Those digital resources that encapsulate either nonmaterial digital objects or hybrid digital objects. | BBVA Accounts exposes, upon customer’s authorization, client data, such as the account’s currency, debits and credits transactions, statements, and the like. |
| Digital capability | Those digital resources that encapsulate repeatable patterns of organizational actions, yielding a capacity to undertake activities. | BBVA Auto Loan enables potential customers to programmatically simulate, register, and receive an auto loan, thus offering the possibility of “instant financing.” |
| Digital strategic initiative | Identifiable competitive moves that depend on the use of digital resources to create and appropriate economic value. | Any initiative leading to the creation of a digital resource or the orchestration of digital resources into a value proposition, such as Lyft ridesharing. |

## Digital Strategic Initiatives in Context

The main objective of DSIs, identifiable competitive moves that depend on the use of digital resources, is to enable value creation and appropriation by the implementing firm. As with any strategic initiative, its value generation potential is influenced by the environmental context in which it is introduced (Sambamurthy et al., 2003). Combinatorial technology evolution occurs when there is a critical mass of elements available for recombination and a mechanism for them to be recombined (Arthur, 2009). Thus, each new modular abstraction needs the appropriate infrastructure to support it and the presence of compatible and complementary modules to yield novel recombination (Henfridsson et al., 2018). The modular nature of the digital resources at the core of DSIs requires the existence of a digital information infrastructure (Hanseth & Lyytinen, 2010) of compatible components ready for recombination and the ability to servitize the resource by embedding both technical and governance specifications in the interface. We theorize that DSIs thrive in an infrastructural, combinatorial, and servitized environment and discuss each of the three environmental catalysts below.

### Infrastructural
Infrastructures include the facilities and the basic physical and organizational structures for the operation of a society or enterprise (Oxford University Press, n.d.). The IT infrastructure of an organization is conceptualized as the foundation of the IT portfolio that enables the delivery of business applications and services (Broadbent et al., 1999). As IT leaves the boundaries of corporations to permeate virtually any aspect of society, in large part thanks to the global internet, localized and bounded IT infrastructures increasingly give way to digital information infrastructures—“unbounded, evolving, shared, heterogeneous, and open installed bases of capabilities” (Tilson et al., 2010, p. 754) configured as “sociotechnical systems comprising an installed base of diverse information technology capabilities and their user, operations, and design communities” (Hanseth & Lyytinen, 2010, p. 4). This definition highlights the recursive and shared nature of digital information infrastructures. They are sociotechnical artifacts (Silver & Markus, 2013) comprised of elements that nonexclusively contribute to the functioning of other information systems (Henfridsson & Bygstad, 2013). The mobile internet infrastructure, for example, is built recursively on the internet infrastructure (i.e., TCP/IP protocols, fiber backbone, networking hardware, globally distributed servers) and smartphone clients connected via cellular towers. It provides the shared underlying layer for a host of digital phenomena—including the availability of a digital resource like Stripe Payments. In summary, organizations can assume the widespread availability of shared, unbounded, heterogeneous, open, and evolving digital information infrastructures on which to envision and deploy value-creating digital strategic initiatives.

### Combinatorial
Technological progress stems from the combination and recombination of evolving components into new structures, leading to a constant state of combinatorial technology evolution (Arthur, 2009). An important driver of combinatorial evolution in technology is the availability and variety of elements that serve as the building blocks of new structures, such that “the more there is to invent with, the greater will be the number of inventions” (Ogburn 1922, as cited in Arthur 2009, p. 21). Consequently, new sociotechnical components are constantly being added to the available universe by firms seeking to provide value through novel recombination. To cope with complexity, organizations partition problems into parsimoniously linked subproblems whereby complex systems can be managed by splitting them into smaller components (i.e., modules) with boundary interfaces that insulate the “internal environment” from the “external environment” (Simon, 1996). This is the process whereby “technology creates itself out of itself” (Arthur, 2009, p. 21). With each new layer of abstraction, the complexity of previous technological evolutions is hidden in a new module that is accessible to other modules by way of an interface (Baldwin & Clark, 2000). The module then becomes available for further recombination with other components compatible with its interface. Digital technology has impressed an acceleration on this process. “Five decades ago, the economy contained many separate and incompatible technical systems, managed independently by different firms. Today, through the evolution of digital technology, we are advancing towards a world comprising one large technical system with many interoperating and evolving parts” (Baldwin, 2015, p. 40). As discussed earlier, when these evolving parts are digital objects configured as modular components with a programmatic bitstring interface, they configure as digital resources. To the extent that their interfaces do not share assumptions or data with any specific design hierarchy (i.e., unbounded modular components within the “one large technical system”) and they are amenable to address unplanned tasks (i.e., they are open), the resulting modules become available to organizations that can integrate them into novel recombination (i.e., new DSI). In summary, organizations can leverage digital resources that belong to multiple value paths (Henfridsson et al., 2018), thus increasing the variety and scope of combinatorial technology evolutions upon which to envision and deploy value-creating digital strategic initiatives.

### Servitized
The term servitization originally stems from the emphasis devoted to services by manufacturing firms seeking “to gain a competitive edge” (Vandermerwe & Rada, 1988, p. 319). More recently the service dominant logic (Vargo & Lusch, 2004, 2008) has shifted the value creation discourse toward “the processes of serving rather than on the output in the form of a product offering that is exchanged” (Lusch & Nambisan, 2015, p. 156). This shift is often fueled by the diffusion of digital technologies (Yoo, 2010).

Servitization spotlights the managerial and contractual enablers of combinatorial technology evolution. Research on digital platforms addresses the role of boundary resources in governing the interactions between the platform and its users (Eaton et al., 2015; Ghazawneh & Henfridsson, 2013). This research shows how “the software tools and regulations that serve as the interface for the arm’s length relationship between the platform owner and the application developer” (Ghazawneh & Henfridsson, 2013, p. 174) play a critical role in enabling the co-creation of a service ecosystem, thus facilitating the democratization of innovation by large and heterogenous groups of actors (von Hippel, 2005). Servitization is increasingly affecting digital information infrastructure elements, whether internal to organizations or shared. Consider the difference between THISCO, introduced in 1988, and Stripe. THISCO (now Dhisco) started as a technology start-up funded by sixteen of the world’s largest hotel chains. They designed, implemented, and managed two-way interfaces between hotel central reservations systems (CRS) and the global distribution systems (GDS) that intermediate airfare sales (Davis, 2002). From a technical standpoint, both THISCO and Stripe rely on technological interfaces between heterogenous and independently owned computer systems. However, while THISCO negotiates each interface directly with the CRS and GDS owners, Stripe enables developers to recombine its payment system into their applications simply by inserting a few lines of integration code connecting to Stripe’s API. All contractual elements of the relationship are coded into the digital resource interface. In our language, Stripe resources are servitized while THISCO’s are not. The result is that relationship and governance become dynamic and agile, enabling firms that engage in combinatorial technology evolution to obtain the service on an as-needed basis and to pay for it based on consumption. The ability to encode the contract structure into bitstring represents a fundamental shift compared to the traditional intra- or interorganizational systems studied in IS research (Rai et al., 2006), such as THISCO, where both governance and technical agreements required lengthy negotiations and formal arrangements. In summary, organizations seeking to design and implement DSI can increasingly leverage servitized digital resources dynamically, rather than having to own the assets they need to envision and deploy value by creating digital strategic initiatives.

## Digital Strategic Initiatives and Value Creation

We introduce two value creation pathways specific to DSI: (1) orchestration of digital resources, and (2) creation of novel digital resources. Orchestration is the purposeful assembly of elements and components into a designed artifact. The firm intentionally arranges digital resources, IT resources, and complementary organizational resources into a value proposition for its customers through an orchestration DSI. This approach emphasizes value creation through a pattern of interlocking activities (Rivkin, 2001), whereby the firm uses digital resources to establish value propositions previously unavailable or unfeasible. Figure 2 shows a DSI orchestrator crafting a value proposition for its customers by assembling internal digital resources, external digital resources provided by DSI creators, and traditional IT resources and organizational capabilities.

**Figure 2. Digital Strategic Initiatives: Orchestration and Creation of Digital Resources**
*(Note: Figure not included in text format, refer to original document for visualization)*

While also requiring the orchestration of resources, creation DSIs result in a specific value proposition: a new digital resource. The new digital resource may be used internally in the creator’s own DSIs or be designed for consumption by external DSI orchestrators so that, once servitized, it enables the resource creator to appropriate a portion of the value it helps DSI orchestrators realize.

In the remainder of this section, we provide four case illustrations (Siggelkow, 2007): two for the orchestration DSI pathway (by a start-up and an incumbent) and two for the creation DSI pathway (a digital capability and a digital asset). The cases are not intended to be rigorous analyses of DSI archetypes or to provide in-depth treatment of the three environmental catalysts of DSI. Rather, they serve as “additional (but not sole) justification” for the research contribution (Siggelkow, 2007, p. 23).

### Digital Resources Orchestration (Instacart)
Instacart is a San Francisco-based start-up founded in 2012. The firm focuses on grocery delivery, enabling customers to order groceries online and have them delivered within a specified time window. Instacart orchestrates a set of digital resources to create a value proposition that was previously unfeasible. For example, it leverages Stripe Payments for transactions, Twilio for messaging and communication, and Google Maps for navigation and delivery tracking. These digital resources are modular, encapsulated, and accessible via programmatic interfaces, allowing Instacart to integrate them seamlessly into its platform without needing to develop these capabilities internally.

## Future Research

The ontological foundation set in this paper opens a wealth of promising avenues for future research to advance the digital strategy agenda (Henfridsson et al., 2018; Yoo et al., 2010). The work can be organized along three themes: DSI design and implementation, organizing for DSI, and DSI strategic outcomes (Table 6). The first addresses questions about DSI antecedents. For example, firms engaging in digital resource creation must identify the object of value their modular components will encapsulate and expose. They must ensure that the digital asset or capability they bring to market is a fully formed modular component and that it encodes both technical specifications and governance rules into a programmatic bitstring interface. Failing to do so would prevent the resource from being readily accessible to DSI orchestrators. A growing literature is looking at these challenges under the “API strategies” label (Davenport & Iyer, 2013; Iyer & Subramaniam, 2015) and recognizing the importance of APIs as “digital control points that set the terms for which data and services can be efficiently shared” (Evans & Basole, 2016, p. 26). APIs are a common approach to interface design (Wang & McLarty, 2021), but not the only one, and we contend that focusing on digital resources will yield more precise and complete findings.

**Table 6. Broad Themes for Future Research**

| Theme | Focus | Sample issues to study |
|-------|-------|-----------------------|
| DSI design and implementation | How can a DSI be effectively designed and implemented? | - Which IT assets can morph into digital assets? Are there optimal modularization patterns for data assets and software assets?<br>- Which organizational capabilities can evolve into digital capabilities? What are their technical and governance interface requirements?<br>- What is the optimal design of programmatic bitstring interfaces? Is it possible to encode sufficient governance rules into a programmatic interface? What role do emerging technologies, such as smart contracts on blockchain, play as elements of the interface? Are there different obstacles for assets and capabilities?<br>- What is the trade-off for DSI orchestrators in choosing between internal digital resource creation versus external digital resource use? Are there optimal patterns of “fit” between digital resources and DSI value paths? |
| DSI and the organization | How should firms organize to thrive in the infrastructural, combinatorial, and servitized competitive environment fostering DSI? | - What are the organizational IS capabilities needed to foster DSI creation and orchestration? What are the organizational prerequisites to resource liquefaction?<br>- Can organizations evolve in their ability to leverage digital resources? If so, how will IT capabilities evolve to enable successful DSI design and development? Are there technical or cultural catalysts (e.g., cloud migration, platform governance, digital values training) to facilitate this transition?<br>- How do DSI impact the coordination mechanisms within and between organizations?<br>- What organizational structures enable DSI orchestration? Do these enablers differ for DSI orchestration and creation? |
| DSI strategic outcomes | How do DSIs enable value creation and appropriation in the infrastructural, combinatorial, and servitized competitive environment? | - Can value be effectively appropriated from DSI in the short and long run? What is the potential for value creation and appropriation by DSI creators?<br>- How can DSI creators and orchestrators best cooperate and compete in the provision of digital resources? How can DSI orchestrators retain control of their initiatives without ownership of external digital resources?<br>- What is the role of DSI as enablers of digital transformation and digital innovation? |

The second theme focuses on the organization as the level of analysis. The IS discipline has long studied organizational IT capabilities that are critical to firm performance. Established IT capabilities, such as technical and relationship skills (Bharadwaj, 2000), are likely still relevant, but others will obsolesce. For example, with the emergence of an infrastructural, combinatorial, and servitized competitive environment, the ability to manage internal IT infrastructures loses importance, while cloud-first system design and DevOps capabilities take center stage. For DSI orchestrators, recent case studies and modularity theory have suggested that companies can promote a fertile environment for DSIs by enforcing modular organizational structures (Hamel & Zanini, 2018; Sanchez & Mahoney, 1996). We currently have limited knowledge about the evolution of traditional IT capabilities and which new IT capabilities will foster leadership through DSI and new digital resources.

The third theme focuses on DSI strategic outcomes, with specific attention to questions of value creation and appropriation. The IS literature holds that when IT resources are external and widely available to all competitors, they are easily imitable (Nevo & Wade, 2010). Thus, DSI based on widely accessible digital resources could contribute to hypercompetition and limit DSI orchestrators’ ability to capture value from their initiatives. At the same time, because of their modular nature, digital resources can facilitate search processes for identifying superior product performance and increase the speed of experimentation, thus enabling unprecedented value creation (Pil & Cohen, 2006). Moreover, unlike traditional IT resources, digital resources are often not fully owned by the designer of the DSI that employs them. Software programs or data repositories at the core of traditional IT-dependent strategic initiatives were acquired, licensed, and, thus, controlled by the firm implementing the initiative. Conversely, digital resources are recombined from outside the design hierarchy of the DSI and are often operated as “live” components by the resource creator. It is unclear how DSI orchestrators can best manage these live digital resources. The recent outages ensuing from a server-side update of Facebook’s iOS SDK exposed the vulnerability of entire services structured as DSI orchestrations (e.g., Spotify, Venmo, Doordash). Aside from technical difficulties, the digital resource owner may “abruptly change pricing terms or even turn off an API that has become critical input into services that others have created” (Evans & Basole, 2016, p. 28). In one stark example, to prevent the exploitation of its customers’ data, Twitter abruptly restricted the Twitter API in 2012—effectively crippling thousands of DSIs orchestrators that depended on Twitter’s digital data assets. Future research should investigate the nature of lock-in and design dependencies that limit the flexibility and value capture potential of DSI orchestrators. It should also explore how digital resources creators can protect their innovations from imitation, particularly considering the recent Google LLC v. Oracle America, Inc. U.S. Supreme Court ruling stating that API specifications are not copyrightable.

Many digital resources encapsulate nonmaterial objects of value (e.g., maps, accounts data). Others are modularized IT-enabled resources accessible through a programmatic interface. Thus, digital resources are the result of yet another abstraction away from hardware (Faulkner & Runde, 2019) where the encapsulation of the object of value is increasingly removed from the physical bearer of the digital object. It would be intriguing to ask at what point the physical bearers underlying hybrid objects become irrelevant and we begin to practically consider encapsulated physical objects as digital. What conditions need to be in place for organizational resources to fully liquefy and take on the structure of digital resources? We explore this second question in depth here as an exemplar to frame future research that can leverage our theorizing.

### Rearchitecting Organizational Capabilities into Digital Capabilities
By responding to recent criticisms of the nature of IT capabilities (Faulkner & Runde, 2019), our definition of digital capabilities broadens the scope of information systems research to a wide range of organizational capabilities. There are early case studies of firms reorganizing their operations around digital capabilities (Hamel & Zanini, 2018), and IT advisory firms talk of packaged business capabilities (PBC) as “software components that represent a well-defined business capability, functionally recognizable as such by a business user” (Yefim et al., 2021, p. 3). Yet, there is no academic research rigorously answering the question: Which organizational capabilities can become digital capabilities through complete abstraction, partial transformation, or substitution?

#### Theoretical Foundations of Organizational Capabilities Research
Organizational capabilities are an organization’s latent “capacity to undertake activities” (Helfat & Raubitschek, 2018, p. 1393). The microfoundation of organizational capabilities are routines, the “repetitive, recognizable patterns of interdependent actions, carried out by multiple actors” in the organization (Feldman & Pentland, 2003, p. 95) through sociomaterial ensembles of actants with tools, templates, written procedures, and digital technologies (Leonardi, 2011). An organizational capability is a high-level routine (or collection of routines) that generates an observable repeatable pattern of actions in the use of assets, thus enabling a firm to perform an activity at a “minimum level of functionality that permits repeated, reliable performance” (Helfat & Peteraf, 2003, p. 999).

Capabilities are categorized functionally (e.g., IT capabilities) as well as hierarchically with respect to the codifiability of the knowledge needed to perform them (Collis, 1994; Wang & Ahmed, 2007; Winter, 2003). Routines, known as zero-level capabilities, are the heart of organizational capabilities. Once the firm demonstrates the ability to deploy a cohesive collection of routines to perform basic functional activities, such as distribution logistics, a first-order organizational capability is configured (Collis, 1994; Salvato & Rerup, 2011; Schreyögg & Kliesch-Eberl, 2007). At the highest level in the hierarchy are dynamic capabilities, defined as higher-level learned and stable patterns of routines or collections of routines that generate and modify lower-level operating capabilities (Zollo & Winter, 2002).

#### Theoretical Extension: From Organizational to Digital Capabilities
Organizational capabilities will vary widely in their rearchitecting potential to be configured as digital capabilities. The latent capacity to undertake a specific activity that results in a clearly recognizable business outcome (e.g., collect payment for services rendered) is the object of value. As we theorized, digital capabilities encapsulate such an object of value in an independent module and expose it to DSI designers via a programmatic interface. Thus, digital capabilities, particularly those intended for widespread commercial adoption (i.e., creation DSI), are not a priori designed for a specific design hierarchy. They leverage the programmatic nature of their interface and the availability of digital boundary objects (e.g., SDK, programming frameworks) to adopt standard interfaces that make them amenable to recombination into multiple innovations (Henfridsson et al., 2018). Thus, based on our ontological representation of a digital resource to configure as digital, valuable organizational capabilities must be modularized and made accessible by way of a programmatic interface.

##### Potential for Modularization: Propositions
As with any modular component, digital resources enforce information hiding through abstraction. Thus, its internal complexity (i.e., the design parameters that determine its form and function) is not visible to the other modules with which it is combined as part of a digital strategic initiative. We theorize that routinization and interdependence are relevant to modularization.

Routinization refers to the degree to which the capability relies on repetitive recognizable patterns of actions (Feldman & Pentland, 2003), leading to a clearly recognizable outcome (Helfat & Martin, 2015). The more routinized the pattern of activities, the less unpredictable and ad hoc interactions are. Routinized capabilities are captured by a set of clearly defined tasks, with predictable precedence relationships and clear ownership assignments. Under these circumstances, it is easier to modularize the resource because the distinct patterns in the sequence of activities displayed by routinized capabilities create “natural encapsulation boundaries” (Langlois, 2002, p. 25).

**Proposition 1:** The more routinized organizational capabilities are, the more amenable they are to configure as digital capabilities.

Interdependence refers to the degree to which the output of one action serves as the input to a related downstream activity (Thompson, 1967). Even small changes to any activity require coordination with upstream/downstream activities in highly interdependent systems (Baldwin & Clark, 2000). A precondition to modularization is the identification of all dependencies between modules, the so-called “bounding of the problem” (Baldwin & Clark, 2000, p. 28). Failure to specify precisely and exhaustively the parameters needed to fully modularize components engenders unexpected dependencies during system integration that negate the advantages of modular design (Ethiraj & Levinthal, 2004). It follows that the more insulated the capability is from other organizational assets or capabilities, the easier it is to identify potential points of interactions, making the ex ante specification of how they will interact possible.

**Proposition 2:** The more interdependent organizational capabilities are, the less amenable they are to configure as digital capabilities.

##### Potential for Access via Programmatic Interface: Propositions
Encapsulation of a digital capability occurs when its capacity to undertake activities is actionable via its programmatic interface, requiring no manual coordination with other modules. Thus, the repeatable pattern of actions that define the capability being modularized rely exclusively on the information received through its programmatic interface. It is through these parameters that the digital capability’s latent “capacity to undertake activities [is] called into use” (Helfat & Raubitschek, 2018, p. 1393). Because of the nature of the interface, these parameters and inputs must be collectively exhaustive with respect to the capability’s expected minimum level of functionality (Helfat & Martin, 2015). Therefore, if the necessary input/output requirements to interact with the capability cannot be specified, regardless of the capability’s degree of independence, the capability cannot configure as digital. On average, we expect a negative relationship between the number of interface parameters required to successfully enact an organizational capability and its potential to configure as digital.

**Proposition 3:** The greater the number of collectively exhaustive interface parameters required by organizational capabilities, the less amenable they are to configure as digital capabilities.

A digital resource requires access via a programmatic bitstring. Thus, interface parameters must be expressed as software. Yet the interface parameters of different organizational capabilities may not be readily digitized. For example, while restaurants can programmatically request a driver to fulfill a delivery through the Stuart API, most have employees physically handing the food order to the rider. Industry pioneers are fully digitizing the interface by installing food lockers that can be electronically opened by riders, making the interface with the delivery module entirely programmatic. Note that whether the internal structure of the capability is purely information defined (e.g., payment, fraud detection) or its object of value is an IT-enabled resource (e.g., delivery fulfillment by Stuart’s white label riders) is irrelevant. A capability configures as digital when it is visible and usable as software by DSI designers. Stripe, for example, has always enabled customers to incorporate its payment capability via the Stripe Charges API. But early iterations required the founders to manually “fill out the paperwork and submit it to [a payment processor], to ‘instantly’ set up your Stripe account” (Greylock, 2015). Because the internal structure of the module was abstracted away from DSI designers, “the salient point was [that Stripe customers] didn’t have to do it, ... and [the founders] were fine doing it for them” (Greylock, 2015). What matters is the degree to which interface parameters and inputs can be expressed digitally, thus without any requirement of interaction between people or between people and objects. What parameters and inputs can be expressed digitally changes over time with the evolution of digital technology (Overby, 2008), and DSI designers will at times be able to bypass nondigitizable parameters—as in the case of restaurants using smart lockers for order pickup by riders or customers. However, if at any point in time the necessary number of digital input/output parameters required to deliver the minimum level of functionality cannot be provided by way of a programmatic interface, the capability does not configure as digital—regardless of its degree of modularity. Thus, the greater the efforts required to express an organizational capability’s interface parameters digitally, the lower the chances of configuring it as digital.

**Proposition 4:** The greater the obstacles to parameter digitization of organizational capabilities, the less amenable they are to configure as digital capabilities.

## Conclusion

We hope that the richness and diversity of the research agenda that can be built on our ontological foundation will place the information systems discipline at the center of digital strategy theorizing. Replacing the traditional IT “x” concepts presents an opportunity to create improved conceptual clarity that considers the distinctive characteristics of novel digital phenomena. To that effort, we contribute a precise definition of key constructs: digital strategic initiatives and digital resources. While echoing recent research spotlighting the central role that digital resources play in digital innovation, we posit that the defining characteristics of digital resources are their modular design, encapsulation of value, and programmatic interface. We argue that DSI design and development thrive in an environmental context that is infrastructural, combinatorial, and servitized.

Ontological precision and sound theoretical grounding are critical elements of basic science. They are even more important in the context of digital strategy because the emergence of Digital “x” labels runs the risk of diluting the core of the information systems literature. With the widespread digital experiments being undertaken by companies as well as a rich landscape of DSI successes and failures, the world offers a living laboratory for studying Digital “x” phenomena as unique and distinct from well-established IT “x” phenomena.

## References

- Alfaro, M., Bressan, M., Girardin, F., Murillo, J., Someh, I. A., & Wixom, B. H. (2019). BBVA’s data monetization journey. *MIS Quarterly Executive*, 18(2), 117–128.
- Andreessen, M., Horowitz, B., Kupor, S., & Chokshi, S. (2016). The a16z podcast: Software programs the world [Audio podcast]. Future. https://a16z.com/2016/07/10/softwareprograms-the-world/
- Arthur, W. B. (2009). *The nature of technology: What it is and how it evolves*. Simon & Schuster.
- Baiyere, A., Grover, V., Gupta, A., Woerner, S., & Lyytinen, K. J. (2017). Digital “x”—A new tune for IS research or old wine in new bottles? In *Proceedings of the 38th International Conference on Information Systems*.
- Baiyere, A., Grover, V., Gupta, A., Woerner, S., & Lyytinen, K. J. (2022). Digital “x”—Charting a path for digital-themed research. *Information Systems Research*, in press.
- Baldwin, C. Y. (2015). Bottlenecks, modules and dynamic architectural capabilities. *Harvard Business School Finance Working Paper*, 15-028. https://doi.org/10.2139/ssm.2512209
- Baldwin, C. Y., & Clark, K. B. (2000). *Design rules: The power of modularity* (Vol. 1). MIT Press.
- Baskerville, R. L., Myers, M. D., & Yoo, Y. (2019). Digital first: The ontological reversal and new challenges for IS research. *MIS Quarterly*, 44(2), 509–523.
- BBVA. (2021). BBVA abre por primera vez en España su “app” a clientes de otros bancos y les permite realizar operaciones. BBVA NOTICIAS. https://www.bbva.com/es/es/ bbva-abrepor-primera-vez-en-espana-su-app-a-clientes-de-otros-bancos-y-les-permite-realizar-operaciones/
- Bharadwaj, A. S. (2000). A resource-based perspective on information technology capability and firm performance: An empirical investigation. *MIS Quarterly*, 24(1), 169–196.
- Bharadwaj, A., El Sawy, O. A., Pavlou, P. A., & Venkatraman, N. (2013). Digital business strategy: Toward a next generation of insights. *MIS Quarterly*, 37(2), 471–482.
- Bostrom, R. P., & Heinen, J. S. (1977). MIS problems and failures: A socio-technical perspective, part I: The causes. *MIS Quarterly*, 1(3), 17–32.
- Brandenburger, A. M., & Stuart, H. W. (1996). Value-based business strategy. *Journal of Economics & Management Strategy*, 5(1), 5–24.
- Broadbent, M., et al. (1999). The implications of information technology infrastructure for business process redesign. *MIS Quarterly*, 23(2), 159–182.
- Collis, D. J. (1994). Research note: How valuable are organizational capabilities? *Strategic Management Journal*, 15(S1), 143–152.
- Constantinides, P., et al. (2018). Introduction to the special issue on platforms and ecosystems. *MIS Quarterly*, 42(2), 381–394.
- Davenport, T., & Iyer, B. (2013). Move beyond enterprise IT to an API strategy. *Harvard Business Review*. https://hbr.org/2013/08/move-beyond-enterprise-it-to-a
- Davis, R. (2002). The Wizard of Oz in CRMLand: CRM’s need for business process management. *Information Systems Management*, 19(4), 43–48.
- Deighton, J., & Kornfeld, L. (2015). Instacart and the new wave of grocery delivery. https://www.hbs.edu/faculty/Pages/item.aspx?num=49111
- Eaton, B., Elaluf-Calderwood, S., & Sorensen, C. (2015). Distributed tuning of boundary resources: The case of Apple’s iOS service system. *MIS Quarterly*, 39(1), 217–244.
- Ethiraj, S. K., & Levinthal, D. (2004). Modularity and innovation in complex systems. *Management Science*, 50(2), 159–173.
- Evans, P. C., & Basole, R. C. (2016). Revealing the API ecosystem and enterprise strategy via visual analytics. *Communications of the ACM*, 59(2), 26–28.
- Faulkner, P., & Runde, J. (2013). Technological objects, social positions, and the transformational model of social activity. *MIS Quarterly*, 37(3), 803–818.
- Faulkner, P., & Runde, J. (2019). Theorizing the digital object. *MIS Quarterly*, 43(4), 1279–1302.
- Feldman, M. S., & Pentland, B. T. (2003). Reconceptualizing organizational routines as a source of flexibility and change. *Administrative Science Quarterly*, 48(1), 94–118.
- Ghazawneh, A., & Henfridsson, O. (2013). Balancing platform control and external contribution in third-party development: The boundary resources model. *Information Systems Journal*, 23(2), 173–192.
- Greeven, M. J., Yu, H., & Shan, J. (2021). Why companies must embrace microservices and modular thinking. *MIT Sloan Management Review*, 62(4). https://sloanreview.mit.edu/article/why-companies-must-embrace-microservices-and-modular-thinking/
- Greylock. (2015, November 4). Blitzscaling 11: Patrick Collison on hiring at Stripe and the role of a product-focused CEO [Video]. YouTube. https://www.youtube.com/watch?v=qrDiwA_xpKrQ
- Grover, V., & Lyytinen, K. (2015). New state of play in information systems research: The push to the edges. *MIS Quarterly*, 39(2), 271–296.
- Gupta, R. (2019, September 20). Delivering scale: Lessons from Instacart’s hypergrowth [Video]. YouTube. https://www.youtube.com/watch?v=tNwk2BW5Lrw
- Hamel, G., & Zanini, M. (2018). The end of bureaucracy. *Harvard Business Review*, 96(6), 50–59.
- Hamilton, J. (2016). A decade of innovation—Press releases. Perspectives. https://perspectives.mvdirona.com/2016/03/a-decade-of-innovation/
- Hanseth, O., & Lyytinen, K. (2010). Design theory for dynamic complexity in information infrastructures: The case of building internet. *Journal of Information Technology*, 25(1), 1–19.
- Helfat, C. E., & Martin, J. A. (2015). Dynamic managerial capabilities: Review and assessment of managerial impact on strategic change. *Journal of Management*, 41(5), 1281–1312.
- Helfat, C. E., & Peteraf, M. A. (2003). The dynamic resource-based view: Capability lifecycles. *Strategic Management Journal*, 24(10), 997–1010.
- Helfat, C. E., & Raubitschek, R. S. (2018). Dynamic and integrative capabilities for profiting from innovation in digital platform-based ecosystems. *Research Policy*, 47(8), 1391–1399.
- Henfridsson, O., & Bygstad, B. (2013). The generative mechanisms of digital infrastructure evolution. *MIS Quarterly*, 37(3), 907–931.
- Henfridsson, O., Nandhakumar, J., Scarbrough, H., & Panourgias, N. (2018). Recombination in the open-ended value landscape of digital innovation. *Information and Organization*, 28(2), 89–100.
- Instacart. (2019). The story behind an Instacart order, part 2: Browsing and buying. https://tech.instacart.com/the-storybehind-an-instacart-order-part-2-browsing-and-ordering6b6a6066a706
- Instacart. (2020, March 20). Tips for using Instacart during this busy and uncertain time. https://news.instacart.com/tips-for-using-instacart-during-this-busy-and-uncertain-time914d15625684
- Ives, B., & Learmonth, G. (1984). The information system as a competitive weapon. *Communications of the ACM*, 27(12), 1193–1201.
- Ives, B., & Piccoli, G. (2002). Rice epicurious shopping: Decadence or destiny. *Communications of the Association for Information Systems*, 9(1), 314–329.
- Iyer, B., & Subramaniam, M. (2015). The strategic value of APIs. *Harvard Business Review*. https://hbr.org/2015/01/the-strategic-value-of-apis
- Kallinikos, J., Aaltonen, A., & Marton, A. (2013). The ambivalent ontology of digital artifacts. *MIS Quarterly*, 37(2), 357–370.
- Kohli, R., & Grover, V. (2008). Business value of IT: An essay on expanding research directions to keep up with the times. *Journal of the Association for Information Systems*, 9(1), 23–39.
- Langlois, R. N. (2002). Modularity in technology and organization. *Journal of Economic Behavior & Organization*, 49(1), 19–37.
- Lawson, J. (2021, January 18). In the digital economy, your software is your competitive advantage. *Harvard Business Review*. https://hbr.org/2021/01/in-the-digital-economy-yoursoftware-is-your-competitive-advantage
- Leonardi, P. M. (2010). Digital materiality? How artifacts without matter, matter. *First Monday*, 15(6).
- Leonardi, P. M. (2011). When flexible routines meet flexible technologies: Affordance, constraint, and the imbrication of human and material agencies. *MIS Quarterly*. https://doi.org/10.2307/23043493
- Lusch, R. F., & Nambisan, S. (2015). Service innovation: A service-dominant logic perspective. *MIS Quarterly*, 39(1), 155–175.
- Melville, N., Kraemer, K., & Gurbaxani, V. (2004). Information technology and organizational performance: An integrative model of IT business value. *MIS Quarterly*, 28(2), 283–322.
- Moyano, J. P., Schmedders, K., & others. (2020). What managers need to know about data exchanges: The era of big-data silos is fading, shared data is the future. *MIT Sloan Management Review*, 61(4), 39–44.
- Mullen, M. (2020). Instacart’s on-demand grocery service brings home the bacon for thousands of happy customers. Twilio. https://customers.twilio.com/1049/instacart/
- Nevo, S., & Wade, M. R. (2010). The formation and value of IT-enabled resources: Antecedents and consequences of synergistic relationships. *MIS Quarterly*, 34(1), 163–183.
- Orlikowski, W. J., & Iacono, C. S. (2001). Research commentary—Desperately seeking the “IT” in IT research: A call to theorizing the IT artifact. *Information Systems Research*, 12(2), 121–134.
- Overby, E. (2008). Process virtualization theory and the impact of information technology. *Organization Science*, 19(2), 277–291.
- Oxford University Press. (n.d.). Infrastructure. In *Oxford Advanced Learner’s Dictionary*. https://www.oxfordlearnersdictionaries.com/definition/english/infrastructure?q=infrastructure
- Oxford University Press. (n.d.). Initiative. In *Oxford Advanced Learner’s Dictionary*. https://www.oxfordlearnersdictionaries.com/definition/english/initiative
- Parnas, D. L. (1972). On the criteria to be used in decomposing systems into modules. *Communications of the ACM*, 15(12), 1053–1058.
- Piccoli, G., & Ives, B. (2005). IT-dependent strategic initiatives and sustained competitive advantage: A review and synthesis of the literature. *MIS Quarterly*, 29(4), 747–776.
- Piccoli, G., & Rodriguez, J. (2020). Digital strategic initiatives: Conceptualization and illustration. In *Proceedings of the 33rd Bled eConference: Enabling Technology for a Sustainable Society*.
- Piccoli, G., Rodriguez, J., & Grover, V. (2020). Strategic initiatives and digital resources: Construct definition and future research directions. In *Proceedings of the 41st International Conference on Information Systems*.
- Pil, F. K., & Cohen, S. K. (2006). Modularity: Implications for imitation, innovation, and sustained advantage. *Academy of Management Review*, 31(4), 995–1011.
- Rai, A., Patnayakuni, R., & Seth, N. (2006). Firm performance impacts of digitally enabled supply chain integration capabilities. *MIS Quarterly*, 30(2), 225–246.
- Ray, G., Muhanna, W. A., & Barney, J. B. (2005). Information technology and the performance of the customer service process: A resource-based analysis. *MIS Quarterly*, 625–652.
- Rivkin, J. W. (2001). Reproducing knowledge: Replication without imitation at moderate complexity. *Organization Science*, 12(3), 274–293.
- Rodriguez, J., & Piccoli, G. (2018). Uncovering the Digital “x” Phenomena in the IS field: A text analysis approach. In *Proceedings of the 31st Bled eConference: Digital Transformation: Meeting the Challenges*.
- Salvato, C., & Rerup, C. (2011). Beyond collective entities: Multilevel research on organizational routines and capabilities. *Journal of Management*, 37(2), 468–490.
- Sambamurthy, V., Bharadwaj, A., & Grover, V. (2003). Shaping agility through digital options: Reconceptualizing the role of information technology in contemporary firms. *MIS Quarterly*, 237–263.
- Sanchez, R., & Mahoney, J.